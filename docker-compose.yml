services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8762:8762"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - app-network

  ms-currency:
    build:
      context: ./ms-currency
      dockerfile: Dockerfile
    container_name: ms-currency-app
    env_file:
      - .env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8083:8083"
    networks:
      - app-network
    depends_on:
      - eureka-server

  mongodb:
    container_name: my_mongodb
    image: mongo:latest
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - "27018:27017"
    networks:
      - app-network
    volumes:
      - mongodb_data:/data/db

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    networks:
      - app-network

  ms-account:
    image: ms-account
    container_name: ms-account-app
    env_file:
      - .env
    environment:
      SPRING_APPLICATION_JSON: >
        {
          "spring.datasource.url": "jdbc:postgresql://postgres:5432/postgres",
          "spring.datasource.username": "postgres",
          "spring.datasource.password": "Aba32835",
          "spring.datasource.driver-class-name": "org.postgresql.Driver",
          "spring.jpa.hibernate.ddl-auto": "update",
          "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect",
          "spring.jpa.show-sql": "true"
        }
    ports:
      - "8085:8085"
    networks:
      - app-network
    depends_on:
      - postgres
      - eureka-server

  ms-identity:
    image: ms-identity
    container_name: ms-identity-app
    env_file:
      - .env
    environment:
      SPRING_APPLICATION_JSON: >
        {
          "spring.data.mongodb.uri": "mongodb://my_mongodb:27017/identity_db?authSource=admin"
        }
    ports:
      - "8084:8084"
    networks:
      - app-network
    depends_on:
      - mongodb

  ms-transfer:
    image: ms-transfer
    container_name: ms-transfer-app
    env_file:
      - .env
    environment:
      SPRING_APPLICATION_JSON: >
        {
          "spring.datasource.url": "jdbc:postgresql://postgres:5432/postgres",
          "spring.datasource.username": "postgres",
          "spring.datasource.password": "Aba32835",
          "spring.datasource.driver-class-name": "org.postgresql.Driver",
          "spring.jpa.hibernate.ddl-auto": "update",
          "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect",
          "spring.jpa.show-sql": "true"
        }
    ports:
      - "8090:8090"
    networks:
      - app-network
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Aba32835
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres-data:
  grafana-data:
    driver: local
